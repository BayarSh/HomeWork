class Animal:
    def __init__(self, name):
        self.alive = True  # Атрибут, указывающий, что животное живое
        self.fed = False   # Атрибут, указывающий, что животное не накормлено
        self.name = name   # Имя животного

# Определяем базовый класс Plant (Растение)
class Plant:
    def __init__(self, name):
        self.edible = False  # Атрибут, указывающий, что растение не съедобное
        self.name = name     # Имя растения

# Определяем класс Mammal (Млекопитающее), наследующий от Animal
class Mammal(Animal):
    def eat(self, food):
        # Метод, который принимает объект food (растение)
        if food.edible:  # Проверяем, является ли растение съедобным
            print(f"{self.name} съел {food.name}")  # Если съедобное, выводим сообщение
            self.fed = True  # Меняем состояние на "накормлен"
        else:
            print(f"{self.name} не стал есть {food.name}")  # Если не съедобное, выводим сообщение
            self.alive = False  # Меняем состояние на "погиб"

# Определяем класс Predator (Хищник), также наследующий от Animal
class Predator(Animal):
    def eat(self, food):
        # Метод аналогичен методу в классе Mammal
        if food.edible:
            print(f"{self.name} съел {food.name}")
            self.fed = True
        else:
            print(f"{self.name} не стал есть {food.name}")
            self.alive = False

# Определяем класс Flower (Цветок), наследующий от Plant
class Flower(Plant):
    pass  # Цветы по умолчанию не съедобные, ничего не переопределяем

# Определяем класс Fruit (Фрукт), наследующий от Plant
class Fruit(Plant):
    def __init__(self, name):
        super().__init__(name)  # Вызываем конструктор родительского класса
        self.edible = True  # Переопределяем атрибут, чтобы фрукты были съедобными

# Создаем объекты классов
a1 = Predator('Волк с Уолл-Стрит')  # Создаем объект хищника
a2 = Mammal('Хатико')  # Создаем объект млекопитающего
p1 = Flower('Цветик семицветик')  # Создаем объект цветка
p2 = Fruit('Заводной апельсин')  # Создаем объект фрукта

# Проверка атрибутов объектов
print(a1.name)  # Выводим имя хищника
print(p1.name)  # Выводим имя цветка
print(a1.alive)  # Проверяем, жив ли хищник
print(a2.fed)    # Проверяем, накормлено ли млекопитающее

# Выполняем действия
a1.eat(p1)  # Хищник пытается съесть цветок
a2.eat(p2)  # Млекопитающее ест фрукт

# Проверка атрибутов после еды
print(a1.alive)  # Проверяем, жив ли хищник после попытки поесть
print(a2.fed)    # Проверяем, накормлено ли млекопитающее после еды